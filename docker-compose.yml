version: '3'

services:
  traefik:
    image: traefik:alpine
    command: --api --docker --loglevel=INFO
    ports:
      - 80:80
      - 443:443
      - 8080:8080 # for monitoring dashboard
    networks:
      - traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  rabbitmq:
    image: rabbitmq:3-management-alpine
    hostname: rabbitmq
    networks:
      - internal
    volumes:
      - ./.docker_data/rabbitmq:/var/lib/rabbitmq/mnesia/rabbit@rabbitmq
    ports:
      - 15672:15672 # management panel

  APIGateway:
    image: gakkoservices/apigateway
    build:
      context: .
      dockerfile: Dockerfile-aspnetcore
      args:
        - name=GakkoServices.APIGateway
        - BUILD_ENVIRONMENT=Release
    networks:
      - internal
      - traefik
    labels:
      traefik.docker.network: ${COMPOSE_PROJECT_NAME}_traefik
      traefik.frontend.rule: PathPrefixStrip:/api-gateway
      traefik.port: 80

  AuthServer:
    image: gakkoservices/authserver
    build:
      context: .
      dockerfile: Dockerfile-aspnetcore
      args:
        - name=GakkoServices.AuthServer
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - internal
      - traefik
      - authserver_db_network
    depends_on:
      - AuthServerDB
      - rabbitmq
    labels:
      traefik.docker.network: ${COMPOSE_PROJECT_NAME}_traefik
      traefik.frontend.rule: PathPrefixStrip:/auth
      traefik.port: 80

  AuthServerDB:
    image: postgres:alpine
    networks:
      - authserver_db_network
    volumes:
      - ./.docker_data/AuthServer:/var/lib/postgresql/data
    labels:
      traefik.enable: false

  ProfileService:
    image: gakkoservices/profileservice
    build:
      context: .
      dockerfile: Dockerfile-aspnetcore
      args:
        - name=GakkoServices.Microservices.ProfileService
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - internal
      - profileservice_db_network
    depends_on:
      - ProfileServiceDB
      - rabbitmq
    labels:
      traefik.enable: false

  ProfileServiceDB:
    image: postgres:alpine
    networks:
      - profileservice_db_network
    volumes:
      - ./.docker_data/ProfileService:/var/lib/postgresql/data
    labels:
      traefik.enable: false

  adminer:
    image: adminer
    networks:
      - authserver_db_network
    ports:
      - 8081:8080
    labels:
      traefik.enable: false

networks:
  traefik:
    external: false
  internal:
    external: false
  authserver_db_network:
    external: false
  profileservice_db_network:
    external: false
